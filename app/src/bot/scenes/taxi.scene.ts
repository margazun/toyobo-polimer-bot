import { Composer, Markup, Scenes } from "telegraf";

let message: any;
export const taxiScene = new Composer<Scenes.WizardContext>();
taxiScene.start(async (ctx) => {
    await ctx.replyWithHTML(`<b>–£–∫–∞–∂–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç</b>\n<i>–ù–∞–ø—Ä–∏–º–µ—Ä, –ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ - –°–∏—Ç–∞–ª–ª</i>`);
});
taxiScene.on('text', async (ctx) => {
    ctx.state.data = { rout: ctx.message.text };
    message = await ctx.replyWithHTML(`<b>–ú–∞—Ä—à—Ä—É—Ç</b>\n<i>${ctx.state.data.rout}</i>`,
        Markup.inlineKeyboard([
            Markup.button.callback('‚û°Ô∏è –î–∞–ª—å—à–µ', 'next'),
            Markup.button.callback('üîô –ò–∑–º–µ–Ω–∏—Ç—å', 'change'),
        ])
    );
    console.log(message);
});
taxiScene.action('next', async (ctx) => {
    ctx.answerCbQuery();
    return ctx.wizard.next();
});
taxiScene.action('change', async (ctx) => {
    ctx.answerCbQuery();
    ctx.scene.reenter();
});